Grammar

    0 $accept: axioma $end

    1 axioma: decl mainfun

    2 decl: INTEGER IDENTIF resdecl ';' decl
    3     | INTEGER IDENTIF '=' NUMERO resdecl ';' decl
    4     | INTEGER IDENTIF '[' NUMERO ']' ';' decl
    5     | IDENTIF '=' NUMERO ';' decl
    6     | vec '=' NUMERO ';' decl
    7     | fun def
    8     | %empty

    9 resdecl: ',' IDENTIF '=' NUMERO resdecl
   10        | ',' IDENTIF resdecl
   11        | %empty

   12 def: fun def
   13    | %empty

   14 $@1: %empty

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo '}'

   16 inipar: INTEGER IDENTIF resinipar
   17       | %empty

   18 resinipar: ',' INTEGER IDENTIF resinipar
   19          | %empty

   20 mainfun: MAIN '(' ')' '{' cuerpo '}'
   21        | %empty

   22 cuerpo: sent cuerpo
   23       | WHILE '(' cond ')' '{' cuerpo '}' cuerpo
   24       | IF '(' cond ')' '{' progn els cuerpo
   25       | FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo
   26       | callfun ';' cuerpo
   27       | RETURN expresioncond ';' cuerpo
   28       | %empty

   29 decliter: INTEGER IDENTIF '=' expresion

   30 iter: IDENTIF '=' expresion

   31 progn: cuerpo

   32 els: '}' ELSE '{' progn '}'
   33    | '}'

   34 sent: PRINT '(' STRING ',' impr ')' ';'
   35     | setq
   36     | PUTS '(' STRING ')' ';'

   37 setq: INTEGER IDENTIF ressetq ';'
   38     | INTEGER IDENTIF '=' expresion ressetq ';'
   39     | IDENTIF '=' expresioncond ';'
   40     | INTEGER IDENTIF '[' expresion ']' ';'
   41     | vec '=' expresion ';'

   42 ressetq: ',' IDENTIF '=' expresioncond ressetq
   43        | ',' IDENTIF ressetq
   44        | %empty

   45 impr: expresioncond
   46     | STRING
   47     | expresioncond ',' impr
   48     | STRING ',' impr

   49 callfun: IDENTIF '(' par ')'

   50 par: expresion respar
   51    | %empty

   52 respar: ',' expresion respar
   53       | %empty

   54 expresion: termino
   55          | expresion '+' expresion
   56          | expresion '-' expresion
   57          | expresion '*' expresion
   58          | expresion '/' expresion
   59          | expresion '%' expresion
   60          | POW '(' expresion ',' expresion ')'

   61 expresioncond: expresion
   62              | cond
   63              | '(' cond ')'

   64 cond: expresioncond GEQ expresioncond
   65     | expresioncond LEQ expresioncond
   66     | expresioncond '>' expresioncond
   67     | expresioncond '<' expresioncond
   68     | expresioncond AND expresioncond
   69     | expresioncond OR expresioncond
   70     | expresioncond EQ expresioncond
   71     | expresioncond NEQ expresioncond

   72 termino: operando
   73        | '+' termino
   74        | '-' termino
   75        | vec
   76        | callfun

   77 vec: IDENTIF '[' expresion ']'

   78 operando: IDENTIF
   79         | NUMERO
   80         | '(' expresion ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 59
    '(' (40) 15 20 23 24 25 34 36 49 60 63 80
    ')' (41) 15 20 23 24 25 34 36 49 60 63 80
    '*' (42) 57
    '+' (43) 55 73
    ',' (44) 9 10 18 34 42 43 47 48 52 60
    '-' (45) 56 74
    '/' (47) 58
    ';' (59) 2 3 4 5 6 25 26 27 34 36 37 38 39 40 41
    '<' (60) 67
    '=' (61) 3 5 6 9 29 30 38 39 41 42
    '>' (62) 66
    '[' (91) 4 40 77
    ']' (93) 4 40 77
    '{' (123) 15 20 23 24 25 32
    '}' (125) 15 20 23 25 32 33
    error (256)
    NUMERO <valor> (258) 3 4 5 6 9 79
    IDENTIF <cadena> (259) 2 3 4 5 9 10 15 16 18 29 30 37 38 39 40 42 43 49 77 78
    INTEGER <cadena> (260) 2 3 4 16 18 29 37 38 40
    STRING <cadena> (261) 34 36 46 48
    PUTS <cadena> (262) 36
    LEQ <cadena> (263) 65
    GEQ <cadena> (264) 64
    EQ <cadena> (265) 70
    NEQ <cadena> (266) 71
    AND <cadena> (267) 68
    OR <cadena> (268) 69
    IF <cadena> (269) 24
    ELSE <cadena> (270) 32
    PRINT <cadena> (271) 34
    MAIN <cadena> (272) 20
    WHILE <cadena> (273) 23
    FOR <cadena> (274) 25
    RETURN <cadena> (275) 27
    POW <cadena> (276) 60
    SIGNO_UNARIO (277)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    axioma (40)
        on left: 1
        on right: 0
    decl <cadena> (41)
        on left: 2 3 4 5 6 7 8
        on right: 1 2 3 4 5 6
    resdecl <cadena> (42)
        on left: 9 10 11
        on right: 2 3 9 10
    def <cadena> (43)
        on left: 12 13
        on right: 7 12
    fun <cadena> (44)
        on left: 15
        on right: 7 12
    $@1 (45)
        on left: 14
        on right: 15
    inipar <cadena> (46)
        on left: 16 17
        on right: 15
    resinipar <cadena> (47)
        on left: 18 19
        on right: 16 18
    mainfun <cadena> (48)
        on left: 20 21
        on right: 1
    cuerpo <cadena> (49)
        on left: 22 23 24 25 26 27 28
        on right: 15 20 22 23 24 25 26 27 31
    decliter <cadena> (50)
        on left: 29
        on right: 25
    iter <cadena> (51)
        on left: 30
        on right: 25
    progn <cadena> (52)
        on left: 31
        on right: 24 32
    els <cadena> (53)
        on left: 32 33
        on right: 24
    sent <cadena> (54)
        on left: 34 35 36
        on right: 22
    setq <cadena> (55)
        on left: 37 38 39 40 41
        on right: 35
    ressetq <cadena> (56)
        on left: 42 43 44
        on right: 37 38 42 43
    impr <cadena> (57)
        on left: 45 46 47 48
        on right: 34 47 48
    callfun <cadena> (58)
        on left: 49
        on right: 26 76
    par <cadena> (59)
        on left: 50 51
        on right: 49
    respar <cadena> (60)
        on left: 52 53
        on right: 50 52
    expresion <cadena> (61)
        on left: 54 55 56 57 58 59 60
        on right: 29 30 38 40 41 50 52 55 56 57 58 59 60 61 77 80
    expresioncond <cadena> (62)
        on left: 61 62 63
        on right: 27 39 42 45 47 64 65 66 67 68 69 70 71
    cond <cadena> (63)
        on left: 64 65 66 67 68 69 70 71
        on right: 23 24 25 62 63
    termino <cadena> (64)
        on left: 72 73 74 75 76
        on right: 54 73 74
    vec <cadena> (65)
        on left: 77
        on right: 6 41 75
    operando <cadena> (66)
        on left: 78 79 80
        on right: 72


State 0

    0 $accept: . axioma $end

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    axioma  go to state 3
    decl    go to state 4
    fun     go to state 5
    vec     go to state 6


State 1

    5 decl: IDENTIF . '=' NUMERO ';' decl
   15 fun: IDENTIF . $@1 '(' inipar ')' '{' cuerpo '}'
   77 vec: IDENTIF . '[' expresion ']'

    '='  shift, and go to state 7
    '['  shift, and go to state 8

    $default  reduce using rule 14 ($@1)

    $@1  go to state 9


State 2

    2 decl: INTEGER . IDENTIF resdecl ';' decl
    3     | INTEGER . IDENTIF '=' NUMERO resdecl ';' decl
    4     | INTEGER . IDENTIF '[' NUMERO ']' ';' decl

    IDENTIF  shift, and go to state 10


State 3

    0 $accept: axioma . $end

    $end  shift, and go to state 11


State 4

    1 axioma: decl . mainfun

    MAIN  shift, and go to state 12

    $default  reduce using rule 21 (mainfun)

    mainfun  go to state 13


State 5

    7 decl: fun . def

    IDENTIF  shift, and go to state 14

    $default  reduce using rule 13 (def)

    def  go to state 15
    fun  go to state 16


State 6

    6 decl: vec . '=' NUMERO ';' decl

    '='  shift, and go to state 17


State 7

    5 decl: IDENTIF '=' . NUMERO ';' decl

    NUMERO  shift, and go to state 18


State 8

   77 vec: IDENTIF '[' . expresion ']'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 26
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 9

   15 fun: IDENTIF $@1 . '(' inipar ')' '{' cuerpo '}'

    '('  shift, and go to state 30


State 10

    2 decl: INTEGER IDENTIF . resdecl ';' decl
    3     | INTEGER IDENTIF . '=' NUMERO resdecl ';' decl
    4     | INTEGER IDENTIF . '[' NUMERO ']' ';' decl

    '='  shift, and go to state 31
    '['  shift, and go to state 32
    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 34


State 11

    0 $accept: axioma $end .

    $default  accept


State 12

   20 mainfun: MAIN . '(' ')' '{' cuerpo '}'

    '('  shift, and go to state 35


State 13

    1 axioma: decl mainfun .

    $default  reduce using rule 1 (axioma)


State 14

   15 fun: IDENTIF . $@1 '(' inipar ')' '{' cuerpo '}'

    $default  reduce using rule 14 ($@1)

    $@1  go to state 9


State 15

    7 decl: fun def .

    $default  reduce using rule 7 (decl)


State 16

   12 def: fun . def

    IDENTIF  shift, and go to state 14

    $default  reduce using rule 13 (def)

    def  go to state 36
    fun  go to state 16


State 17

    6 decl: vec '=' . NUMERO ';' decl

    NUMERO  shift, and go to state 37


State 18

    5 decl: IDENTIF '=' NUMERO . ';' decl

    ';'  shift, and go to state 38


State 19

   79 operando: NUMERO .

    $default  reduce using rule 79 (operando)


State 20

   49 callfun: IDENTIF . '(' par ')'
   77 vec: IDENTIF . '[' expresion ']'
   78 operando: IDENTIF .

    '['  shift, and go to state 8
    '('  shift, and go to state 39

    $default  reduce using rule 78 (operando)


State 21

   60 expresion: POW . '(' expresion ',' expresion ')'

    '('  shift, and go to state 40


State 22

   73 termino: '+' . termino

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun   go to state 25
    termino   go to state 41
    vec       go to state 28
    operando  go to state 29


State 23

   74 termino: '-' . termino

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun   go to state 25
    termino   go to state 42
    vec       go to state 28
    operando  go to state 29


State 24

   80 operando: '(' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 43
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 25

   76 termino: callfun .

    $default  reduce using rule 76 (termino)


State 26

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   77 vec: IDENTIF '[' expresion . ']'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 49


State 27

   54 expresion: termino .

    $default  reduce using rule 54 (expresion)


State 28

   75 termino: vec .

    $default  reduce using rule 75 (termino)


State 29

   72 termino: operando .

    $default  reduce using rule 72 (termino)


State 30

   15 fun: IDENTIF $@1 '(' . inipar ')' '{' cuerpo '}'

    INTEGER  shift, and go to state 50

    $default  reduce using rule 17 (inipar)

    inipar  go to state 51


State 31

    3 decl: INTEGER IDENTIF '=' . NUMERO resdecl ';' decl

    NUMERO  shift, and go to state 52


State 32

    4 decl: INTEGER IDENTIF '[' . NUMERO ']' ';' decl

    NUMERO  shift, and go to state 53


State 33

    9 resdecl: ',' . IDENTIF '=' NUMERO resdecl
   10        | ',' . IDENTIF resdecl

    IDENTIF  shift, and go to state 54


State 34

    2 decl: INTEGER IDENTIF resdecl . ';' decl

    ';'  shift, and go to state 55


State 35

   20 mainfun: MAIN '(' . ')' '{' cuerpo '}'

    ')'  shift, and go to state 56


State 36

   12 def: fun def .

    $default  reduce using rule 12 (def)


State 37

    6 decl: vec '=' NUMERO . ';' decl

    ';'  shift, and go to state 57


State 38

    5 decl: IDENTIF '=' NUMERO ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 58
    fun   go to state 5
    vec   go to state 6


State 39

   49 callfun: IDENTIF '(' . par ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    $default  reduce using rule 51 (par)

    callfun    go to state 25
    par        go to state 59
    expresion  go to state 60
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 40

   60 expresion: POW '(' . expresion ',' expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 61
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 41

   73 termino: '+' termino .

    $default  reduce using rule 73 (termino)


State 42

   74 termino: '-' termino .

    $default  reduce using rule 74 (termino)


State 43

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   80 operando: '(' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 62


State 44

   55 expresion: expresion '+' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 63
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 45

   56 expresion: expresion '-' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 64
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 46

   59 expresion: expresion '%' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 65
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 47

   57 expresion: expresion '*' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 66
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 48

   58 expresion: expresion '/' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 67
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 49

   77 vec: IDENTIF '[' expresion ']' .

    $default  reduce using rule 77 (vec)


State 50

   16 inipar: INTEGER . IDENTIF resinipar

    IDENTIF  shift, and go to state 68


State 51

   15 fun: IDENTIF $@1 '(' inipar . ')' '{' cuerpo '}'

    ')'  shift, and go to state 69


State 52

    3 decl: INTEGER IDENTIF '=' NUMERO . resdecl ';' decl

    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 70


State 53

    4 decl: INTEGER IDENTIF '[' NUMERO . ']' ';' decl

    ']'  shift, and go to state 71


State 54

    9 resdecl: ',' IDENTIF . '=' NUMERO resdecl
   10        | ',' IDENTIF . resdecl

    '='  shift, and go to state 72
    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 73


State 55

    2 decl: INTEGER IDENTIF resdecl ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 74
    fun   go to state 5
    vec   go to state 6


State 56

   20 mainfun: MAIN '(' ')' . '{' cuerpo '}'

    '{'  shift, and go to state 75


State 57

    6 decl: vec '=' NUMERO ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 76
    fun   go to state 5
    vec   go to state 6


State 58

    5 decl: IDENTIF '=' NUMERO ';' decl .

    $default  reduce using rule 5 (decl)


State 59

   49 callfun: IDENTIF '(' par . ')'

    ')'  shift, and go to state 77


State 60

   50 par: expresion . respar
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 78

    $default  reduce using rule 53 (respar)

    respar  go to state 79


State 61

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   60          | POW '(' expresion . ',' expresion ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 80


State 62

   80 operando: '(' expresion ')' .

    $default  reduce using rule 80 (operando)


State 63

   55 expresion: expresion . '+' expresion
   55          | expresion '+' expresion .
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 55 (expresion)


State 64

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   56          | expresion '-' expresion .
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 56 (expresion)


State 65

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   59          | expresion '%' expresion .

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 59 (expresion)


State 66

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   57          | expresion '*' expresion .
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    $default  reduce using rule 57 (expresion)


State 67

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   58          | expresion '/' expresion .
   59          | expresion . '%' expresion

    $default  reduce using rule 58 (expresion)


State 68

   16 inipar: INTEGER IDENTIF . resinipar

    ','  shift, and go to state 81

    $default  reduce using rule 19 (resinipar)

    resinipar  go to state 82


State 69

   15 fun: IDENTIF $@1 '(' inipar ')' . '{' cuerpo '}'

    '{'  shift, and go to state 83


State 70

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl . ';' decl

    ';'  shift, and go to state 84


State 71

    4 decl: INTEGER IDENTIF '[' NUMERO ']' . ';' decl

    ';'  shift, and go to state 85


State 72

    9 resdecl: ',' IDENTIF '=' . NUMERO resdecl

    NUMERO  shift, and go to state 86


State 73

   10 resdecl: ',' IDENTIF resdecl .

    $default  reduce using rule 10 (resdecl)


State 74

    2 decl: INTEGER IDENTIF resdecl ';' decl .

    $default  reduce using rule 2 (decl)


State 75

   20 mainfun: MAIN '(' ')' '{' . cuerpo '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 95
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 76

    6 decl: vec '=' NUMERO ';' decl .

    $default  reduce using rule 6 (decl)


State 77

   49 callfun: IDENTIF '(' par ')' .

    $default  reduce using rule 49 (callfun)


State 78

   52 respar: ',' . expresion respar

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 100
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 79

   50 par: expresion respar .

    $default  reduce using rule 50 (par)


State 80

   60 expresion: POW '(' expresion ',' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 101
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 81

   18 resinipar: ',' . INTEGER IDENTIF resinipar

    INTEGER  shift, and go to state 102


State 82

   16 inipar: INTEGER IDENTIF resinipar .

    $default  reduce using rule 16 (inipar)


State 83

   15 fun: IDENTIF $@1 '(' inipar ')' '{' . cuerpo '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 103
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 84

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 104
    fun   go to state 5
    vec   go to state 6


State 85

    4 decl: INTEGER IDENTIF '[' NUMERO ']' ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 105
    fun   go to state 5
    vec   go to state 6


State 86

    9 resdecl: ',' IDENTIF '=' NUMERO . resdecl

    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 106


State 87

   39 setq: IDENTIF . '=' expresioncond ';'
   49 callfun: IDENTIF . '(' par ')'
   77 vec: IDENTIF . '[' expresion ']'

    '='  shift, and go to state 107
    '['  shift, and go to state 8
    '('  shift, and go to state 39


State 88

   37 setq: INTEGER . IDENTIF ressetq ';'
   38     | INTEGER . IDENTIF '=' expresion ressetq ';'
   40     | INTEGER . IDENTIF '[' expresion ']' ';'

    IDENTIF  shift, and go to state 108


State 89

   36 sent: PUTS . '(' STRING ')' ';'

    '('  shift, and go to state 109


State 90

   24 cuerpo: IF . '(' cond ')' '{' progn els cuerpo

    '('  shift, and go to state 110


State 91

   34 sent: PRINT . '(' STRING ',' impr ')' ';'

    '('  shift, and go to state 111


State 92

   23 cuerpo: WHILE . '(' cond ')' '{' cuerpo '}' cuerpo

    '('  shift, and go to state 112


State 93

   25 cuerpo: FOR . '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    '('  shift, and go to state 113


State 94

   27 cuerpo: RETURN . expresioncond ';' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 116
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 95

   20 mainfun: MAIN '(' ')' '{' cuerpo . '}'

    '}'  shift, and go to state 118


State 96

   22 cuerpo: sent . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 119
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 97

   35 sent: setq .

    $default  reduce using rule 35 (sent)


State 98

   26 cuerpo: callfun . ';' cuerpo

    ';'  shift, and go to state 120


State 99

   41 setq: vec . '=' expresion ';'

    '='  shift, and go to state 121


State 100

   52 respar: ',' expresion . respar
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 78

    $default  reduce using rule 53 (respar)

    respar  go to state 122


State 101

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   60          | POW '(' expresion ',' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 123


State 102

   18 resinipar: ',' INTEGER . IDENTIF resinipar

    IDENTIF  shift, and go to state 124


State 103

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo . '}'

    '}'  shift, and go to state 125


State 104

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl ';' decl .

    $default  reduce using rule 3 (decl)


State 105

    4 decl: INTEGER IDENTIF '[' NUMERO ']' ';' decl .

    $default  reduce using rule 4 (decl)


State 106

    9 resdecl: ',' IDENTIF '=' NUMERO resdecl .

    $default  reduce using rule 9 (resdecl)


State 107

   39 setq: IDENTIF '=' . expresioncond ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 126
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 108

   37 setq: INTEGER IDENTIF . ressetq ';'
   38     | INTEGER IDENTIF . '=' expresion ressetq ';'
   40     | INTEGER IDENTIF . '[' expresion ']' ';'

    '='  shift, and go to state 127
    '['  shift, and go to state 128
    ','  shift, and go to state 129

    $default  reduce using rule 44 (ressetq)

    ressetq  go to state 130


State 109

   36 sent: PUTS '(' . STRING ')' ';'

    STRING  shift, and go to state 131


State 110

   24 cuerpo: IF '(' . cond ')' '{' progn els cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 133
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 111

   34 sent: PRINT '(' . STRING ',' impr ')' ';'

    STRING  shift, and go to state 134


State 112

   23 cuerpo: WHILE '(' . cond ')' '{' cuerpo '}' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 135
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 113

   25 cuerpo: FOR '(' . decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    INTEGER  shift, and go to state 136

    decliter  go to state 137


State 114

   63 expresioncond: '(' . cond ')'
   80 operando: '(' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 138
    expresioncond  go to state 132
    cond           go to state 139
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 115

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   61 expresioncond: expresion .

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 61 (expresioncond)


State 116

   27 cuerpo: RETURN expresioncond . ';' cuerpo
   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    OR   shift, and go to state 145
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147
    ';'  shift, and go to state 148


State 117

   62 expresioncond: cond .

    $default  reduce using rule 62 (expresioncond)


State 118

   20 mainfun: MAIN '(' ')' '{' cuerpo '}' .

    $default  reduce using rule 20 (mainfun)


State 119

   22 cuerpo: sent cuerpo .

    $default  reduce using rule 22 (cuerpo)


State 120

   26 cuerpo: callfun ';' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 149
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 121

   41 setq: vec '=' . expresion ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 150
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 122

   52 respar: ',' expresion respar .

    $default  reduce using rule 52 (respar)


State 123

   60 expresion: POW '(' expresion ',' expresion ')' .

    $default  reduce using rule 60 (expresion)


State 124

   18 resinipar: ',' INTEGER IDENTIF . resinipar

    ','  shift, and go to state 81

    $default  reduce using rule 19 (resinipar)

    resinipar  go to state 151


State 125

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo '}' .

    $default  reduce using rule 15 (fun)


State 126

   39 setq: IDENTIF '=' expresioncond . ';'
   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    OR   shift, and go to state 145
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147
    ';'  shift, and go to state 152


State 127

   38 setq: INTEGER IDENTIF '=' . expresion ressetq ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 153
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 128

   40 setq: INTEGER IDENTIF '[' . expresion ']' ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 154
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 129

   42 ressetq: ',' . IDENTIF '=' expresioncond ressetq
   43        | ',' . IDENTIF ressetq

    IDENTIF  shift, and go to state 155


State 130

   37 setq: INTEGER IDENTIF ressetq . ';'

    ';'  shift, and go to state 156


State 131

   36 sent: PUTS '(' STRING . ')' ';'

    ')'  shift, and go to state 157


State 132

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    OR   shift, and go to state 145
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147


State 133

   24 cuerpo: IF '(' cond . ')' '{' progn els cuerpo
   62 expresioncond: cond .

    ')'  shift, and go to state 158

    $default  reduce using rule 62 (expresioncond)


State 134

   34 sent: PRINT '(' STRING . ',' impr ')' ';'

    ','  shift, and go to state 159


State 135

   23 cuerpo: WHILE '(' cond . ')' '{' cuerpo '}' cuerpo
   62 expresioncond: cond .

    ')'  shift, and go to state 160

    $default  reduce using rule 62 (expresioncond)


State 136

   29 decliter: INTEGER . IDENTIF '=' expresion

    IDENTIF  shift, and go to state 161


State 137

   25 cuerpo: FOR '(' decliter . ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    ';'  shift, and go to state 162


State 138

   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion
   61 expresioncond: expresion .
   80 operando: '(' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 62

    $default  reduce using rule 61 (expresioncond)


State 139

   62 expresioncond: cond .
   63              | '(' cond . ')'

    ')'  shift, and go to state 163

    $default  reduce using rule 62 (expresioncond)


State 140

   65 cond: expresioncond LEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 164
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 141

   64 cond: expresioncond GEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 165
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 142

   70 cond: expresioncond EQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 166
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 143

   71 cond: expresioncond NEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 167
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 144

   68 cond: expresioncond AND . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 168
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 145

   69 cond: expresioncond OR . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 169
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 146

   67 cond: expresioncond '<' . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 170
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 147

   66 cond: expresioncond '>' . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 171
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 148

   27 cuerpo: RETURN expresioncond ';' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 172
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 149

   26 cuerpo: callfun ';' cuerpo .

    $default  reduce using rule 26 (cuerpo)


State 150

   41 setq: vec '=' expresion . ';'
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ';'  shift, and go to state 173


State 151

   18 resinipar: ',' INTEGER IDENTIF resinipar .

    $default  reduce using rule 18 (resinipar)


State 152

   39 setq: IDENTIF '=' expresioncond ';' .

    $default  reduce using rule 39 (setq)


State 153

   38 setq: INTEGER IDENTIF '=' expresion . ressetq ';'
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 129

    $default  reduce using rule 44 (ressetq)

    ressetq  go to state 174


State 154

   40 setq: INTEGER IDENTIF '[' expresion . ']' ';'
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 175


State 155

   42 ressetq: ',' IDENTIF . '=' expresioncond ressetq
   43        | ',' IDENTIF . ressetq

    '='  shift, and go to state 176
    ','  shift, and go to state 129

    $default  reduce using rule 44 (ressetq)

    ressetq  go to state 177


State 156

   37 setq: INTEGER IDENTIF ressetq ';' .

    $default  reduce using rule 37 (setq)


State 157

   36 sent: PUTS '(' STRING ')' . ';'

    ';'  shift, and go to state 178


State 158

   24 cuerpo: IF '(' cond ')' . '{' progn els cuerpo

    '{'  shift, and go to state 179


State 159

   34 sent: PRINT '(' STRING ',' . impr ')' ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 180
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 181
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 182
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 160

   23 cuerpo: WHILE '(' cond ')' . '{' cuerpo '}' cuerpo

    '{'  shift, and go to state 183


State 161

   29 decliter: INTEGER IDENTIF . '=' expresion

    '='  shift, and go to state 184


State 162

   25 cuerpo: FOR '(' decliter ';' . cond ';' iter ')' '{' cuerpo '}' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 185
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 163

   63 expresioncond: '(' cond ')' .

    $default  reduce using rule 63 (expresioncond)


State 164

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   65     | expresioncond LEQ expresioncond .
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    $default  reduce using rule 65 (cond)


State 165

   64 cond: expresioncond . GEQ expresioncond
   64     | expresioncond GEQ expresioncond .
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    $default  reduce using rule 64 (cond)


State 166

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   70     | expresioncond EQ expresioncond .
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147

    $default  reduce using rule 70 (cond)


State 167

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond
   71     | expresioncond NEQ expresioncond .

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147

    $default  reduce using rule 71 (cond)


State 168

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   68     | expresioncond AND expresioncond .
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147

    $default  reduce using rule 68 (cond)


State 169

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   69     | expresioncond OR expresioncond .
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147

    $default  reduce using rule 69 (cond)


State 170

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   67     | expresioncond '<' expresioncond .
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    $default  reduce using rule 67 (cond)


State 171

   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   66     | expresioncond '>' expresioncond .
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    $default  reduce using rule 66 (cond)


State 172

   27 cuerpo: RETURN expresioncond ';' cuerpo .

    $default  reduce using rule 27 (cuerpo)


State 173

   41 setq: vec '=' expresion ';' .

    $default  reduce using rule 41 (setq)


State 174

   38 setq: INTEGER IDENTIF '=' expresion ressetq . ';'

    ';'  shift, and go to state 186


State 175

   40 setq: INTEGER IDENTIF '[' expresion ']' . ';'

    ';'  shift, and go to state 187


State 176

   42 ressetq: ',' IDENTIF '=' . expresioncond ressetq

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 188
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 177

   43 ressetq: ',' IDENTIF ressetq .

    $default  reduce using rule 43 (ressetq)


State 178

   36 sent: PUTS '(' STRING ')' ';' .

    $default  reduce using rule 36 (sent)


State 179

   24 cuerpo: IF '(' cond ')' '{' . progn els cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 189
    progn    go to state 190
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 180

   46 impr: STRING .
   48     | STRING . ',' impr

    ','  shift, and go to state 191

    $default  reduce using rule 46 (impr)


State 181

   34 sent: PRINT '(' STRING ',' impr . ')' ';'

    ')'  shift, and go to state 192


State 182

   45 impr: expresioncond .
   47     | expresioncond . ',' impr
   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    OR   shift, and go to state 145
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147
    ','  shift, and go to state 193

    $default  reduce using rule 45 (impr)


State 183

   23 cuerpo: WHILE '(' cond ')' '{' . cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 194
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 184

   29 decliter: INTEGER IDENTIF '=' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 195
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 185

   25 cuerpo: FOR '(' decliter ';' cond . ';' iter ')' '{' cuerpo '}' cuerpo
   62 expresioncond: cond .

    ';'  shift, and go to state 196

    $default  reduce using rule 62 (expresioncond)


State 186

   38 setq: INTEGER IDENTIF '=' expresion ressetq ';' .

    $default  reduce using rule 38 (setq)


State 187

   40 setq: INTEGER IDENTIF '[' expresion ']' ';' .

    $default  reduce using rule 40 (setq)


State 188

   42 ressetq: ',' IDENTIF '=' expresioncond . ressetq
   64 cond: expresioncond . GEQ expresioncond
   65     | expresioncond . LEQ expresioncond
   66     | expresioncond . '>' expresioncond
   67     | expresioncond . '<' expresioncond
   68     | expresioncond . AND expresioncond
   69     | expresioncond . OR expresioncond
   70     | expresioncond . EQ expresioncond
   71     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 140
    GEQ  shift, and go to state 141
    EQ   shift, and go to state 142
    NEQ  shift, and go to state 143
    AND  shift, and go to state 144
    OR   shift, and go to state 145
    '<'  shift, and go to state 146
    '>'  shift, and go to state 147
    ','  shift, and go to state 129

    $default  reduce using rule 44 (ressetq)

    ressetq  go to state 197


State 189

   31 progn: cuerpo .

    $default  reduce using rule 31 (progn)


State 190

   24 cuerpo: IF '(' cond ')' '{' progn . els cuerpo

    '}'  shift, and go to state 198

    els  go to state 199


State 191

   48 impr: STRING ',' . impr

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 180
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 200
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 182
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 192

   34 sent: PRINT '(' STRING ',' impr ')' . ';'

    ';'  shift, and go to state 201


State 193

   47 impr: expresioncond ',' . impr

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 180
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 202
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 182
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 194

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo . '}' cuerpo

    '}'  shift, and go to state 203


State 195

   29 decliter: INTEGER IDENTIF '=' expresion .
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 29 (decliter)


State 196

   25 cuerpo: FOR '(' decliter ';' cond ';' . iter ')' '{' cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 204

    iter  go to state 205


State 197

   42 ressetq: ',' IDENTIF '=' expresioncond ressetq .

    $default  reduce using rule 42 (ressetq)


State 198

   32 els: '}' . ELSE '{' progn '}'
   33    | '}' .

    ELSE  shift, and go to state 206

    $default  reduce using rule 33 (els)


State 199

   24 cuerpo: IF '(' cond ')' '{' progn els . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 207
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 200

   48 impr: STRING ',' impr .

    $default  reduce using rule 48 (impr)


State 201

   34 sent: PRINT '(' STRING ',' impr ')' ';' .

    $default  reduce using rule 34 (sent)


State 202

   47 impr: expresioncond ',' impr .

    $default  reduce using rule 47 (impr)


State 203

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo '}' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 208
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 204

   30 iter: IDENTIF . '=' expresion

    '='  shift, and go to state 209


State 205

   25 cuerpo: FOR '(' decliter ';' cond ';' iter . ')' '{' cuerpo '}' cuerpo

    ')'  shift, and go to state 210


State 206

   32 els: '}' ELSE . '{' progn '}'

    '{'  shift, and go to state 211


State 207

   24 cuerpo: IF '(' cond ')' '{' progn els cuerpo .

    $default  reduce using rule 24 (cuerpo)


State 208

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo '}' cuerpo .

    $default  reduce using rule 23 (cuerpo)


State 209

   30 iter: IDENTIF '=' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 212
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 210

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' . '{' cuerpo '}' cuerpo

    '{'  shift, and go to state 213


State 211

   32 els: '}' ELSE '{' . progn '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 189
    progn    go to state 214
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 212

   30 iter: IDENTIF '=' expresion .
   55 expresion: expresion . '+' expresion
   56          | expresion . '-' expresion
   57          | expresion . '*' expresion
   58          | expresion . '/' expresion
   59          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 30 (iter)


State 213

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' . cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 215
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 214

   32 els: '}' ELSE '{' progn . '}'

    '}'  shift, and go to state 216


State 215

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo . '}' cuerpo

    '}'  shift, and go to state 217


State 216

   32 els: '}' ELSE '{' progn '}' .

    $default  reduce using rule 32 (els)


State 217

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 218
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 218

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo .

    $default  reduce using rule 25 (cuerpo)
