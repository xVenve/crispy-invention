Grammar

    0 $accept: axioma $end

    1 axioma: decl mainfun

    2 decl: INTEGER IDENTIF resdecl ';' decl
    3     | INTEGER IDENTIF '=' NUMERO resdecl ';' decl
    4     | INTEGER IDENTIF '[' NUMERO ']' ';' decl
    5     | IDENTIF '=' NUMERO ';' decl
    6     | vec '=' NUMERO ';' decl
    7     | fun def
    8     | %empty

    9 resdecl: ',' IDENTIF '=' NUMERO resdecl
   10        | ',' IDENTIF resdecl
   11        | %empty

   12 def: fun def
   13    | %empty

   14 $@1: %empty

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo '}'

   16 inipar: INTEGER IDENTIF resinipar
   17       | %empty

   18 resinipar: ',' INTEGER IDENTIF resinipar
   19          | %empty

   20 mainfun: MAIN '(' ')' '{' cuerpo '}'
   21        | %empty

   22 cuerpo: sent cuerpo
   23       | WHILE '(' cond ')' '{' cuerpo '}' cuerpo
   24       | IF '(' cond ')' '{' progn els cuerpo
   25       | FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo
   26       | callfun ';' cuerpo
   27       | RETURN expresioncond ';' cuerpo
   28       | %empty

   29 decliter: INTEGER IDENTIF '=' expresion
   30         | IDENTIF '=' expresion

   31 iter: IDENTIF '=' expresion

   32 progn: cuerpo

   33 els: '}' ELSE '{' progn '}'
   34    | '}'

   35 sent: PRINT '(' STRING ',' impr ')' ';'
   36     | setq
   37     | PUTS '(' STRING ')' ';'

   38 setq: INTEGER IDENTIF ressetq ';'
   39     | INTEGER IDENTIF '=' expresion ressetq ';'
   40     | IDENTIF '=' expresioncond ';'
   41     | INTEGER IDENTIF '[' expresion ']' ';'
   42     | vec '=' expresion ';'

   43 ressetq: ',' IDENTIF '=' expresioncond ressetq
   44        | ',' IDENTIF ressetq
   45        | %empty

   46 impr: expresioncond
   47     | STRING
   48     | expresioncond ',' impr
   49     | STRING ',' impr

   50 callfun: IDENTIF '(' par ')'

   51 par: expresion respar
   52    | %empty

   53 respar: ',' expresion respar
   54       | %empty

   55 expresion: termino
   56          | expresion '+' expresion
   57          | expresion '-' expresion
   58          | expresion '*' expresion
   59          | expresion '/' expresion
   60          | expresion '%' expresion
   61          | POW '(' expresion ',' expresion ')'

   62 expresioncond: expresion
   63              | cond
   64              | '(' cond ')'

   65 cond: expresioncond GEQ expresioncond
   66     | expresioncond LEQ expresioncond
   67     | expresioncond '>' expresioncond
   68     | expresioncond '<' expresioncond
   69     | expresioncond AND expresioncond
   70     | expresioncond OR expresioncond
   71     | expresioncond EQ expresioncond
   72     | expresioncond NEQ expresioncond

   73 termino: operando
   74        | '+' termino
   75        | '-' termino
   76        | vec
   77        | callfun

   78 vec: IDENTIF '[' expresion ']'

   79 operando: IDENTIF
   80         | NUMERO
   81         | '(' expresion ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 60
    '(' (40) 15 20 23 24 25 35 37 50 61 64 81
    ')' (41) 15 20 23 24 25 35 37 50 61 64 81
    '*' (42) 58
    '+' (43) 56 74
    ',' (44) 9 10 18 35 43 44 48 49 53 61
    '-' (45) 57 75
    '/' (47) 59
    ';' (59) 2 3 4 5 6 25 26 27 35 37 38 39 40 41 42
    '<' (60) 68
    '=' (61) 3 5 6 9 29 30 31 39 40 42 43
    '>' (62) 67
    '[' (91) 4 41 78
    ']' (93) 4 41 78
    '{' (123) 15 20 23 24 25 33
    '}' (125) 15 20 23 25 33 34
    error (256)
    NUMERO <valor> (258) 3 4 5 6 9 80
    IDENTIF <cadena> (259) 2 3 4 5 9 10 15 16 18 29 30 31 38 39 40 41 43 44 50 78 79
    INTEGER <cadena> (260) 2 3 4 16 18 29 38 39 41
    STRING <cadena> (261) 35 37 47 49
    PUTS <cadena> (262) 37
    LEQ <cadena> (263) 66
    GEQ <cadena> (264) 65
    EQ <cadena> (265) 71
    NEQ <cadena> (266) 72
    AND <cadena> (267) 69
    OR <cadena> (268) 70
    IF <cadena> (269) 24
    ELSE <cadena> (270) 33
    PRINT <cadena> (271) 35
    MAIN <cadena> (272) 20
    WHILE <cadena> (273) 23
    FOR <cadena> (274) 25
    RETURN <cadena> (275) 27
    POW <cadena> (276) 61
    SIGNO_UNARIO (277)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    axioma (40)
        on left: 1
        on right: 0
    decl <cadena> (41)
        on left: 2 3 4 5 6 7 8
        on right: 1 2 3 4 5 6
    resdecl <cadena> (42)
        on left: 9 10 11
        on right: 2 3 9 10
    def <cadena> (43)
        on left: 12 13
        on right: 7 12
    fun <cadena> (44)
        on left: 15
        on right: 7 12
    $@1 (45)
        on left: 14
        on right: 15
    inipar <cadena> (46)
        on left: 16 17
        on right: 15
    resinipar <cadena> (47)
        on left: 18 19
        on right: 16 18
    mainfun <cadena> (48)
        on left: 20 21
        on right: 1
    cuerpo <cadena> (49)
        on left: 22 23 24 25 26 27 28
        on right: 15 20 22 23 24 25 26 27 32
    decliter <cadena> (50)
        on left: 29 30
        on right: 25
    iter <cadena> (51)
        on left: 31
        on right: 25
    progn <cadena> (52)
        on left: 32
        on right: 24 33
    els <cadena> (53)
        on left: 33 34
        on right: 24
    sent <cadena> (54)
        on left: 35 36 37
        on right: 22
    setq <cadena> (55)
        on left: 38 39 40 41 42
        on right: 36
    ressetq <cadena> (56)
        on left: 43 44 45
        on right: 38 39 43 44
    impr <cadena> (57)
        on left: 46 47 48 49
        on right: 35 48 49
    callfun <cadena> (58)
        on left: 50
        on right: 26 77
    par <cadena> (59)
        on left: 51 52
        on right: 50
    respar <cadena> (60)
        on left: 53 54
        on right: 51 53
    expresion <cadena> (61)
        on left: 55 56 57 58 59 60 61
        on right: 29 30 31 39 41 42 51 53 56 57 58 59 60 61 62 78 81
    expresioncond <cadena> (62)
        on left: 62 63 64
        on right: 27 40 43 46 48 65 66 67 68 69 70 71 72
    cond <cadena> (63)
        on left: 65 66 67 68 69 70 71 72
        on right: 23 24 25 63 64
    termino <cadena> (64)
        on left: 73 74 75 76 77
        on right: 55 74 75
    vec <cadena> (65)
        on left: 78
        on right: 6 42 76
    operando <cadena> (66)
        on left: 79 80 81
        on right: 73


State 0

    0 $accept: . axioma $end

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    axioma  go to state 3
    decl    go to state 4
    fun     go to state 5
    vec     go to state 6


State 1

    5 decl: IDENTIF . '=' NUMERO ';' decl
   15 fun: IDENTIF . $@1 '(' inipar ')' '{' cuerpo '}'
   78 vec: IDENTIF . '[' expresion ']'

    '='  shift, and go to state 7
    '['  shift, and go to state 8

    $default  reduce using rule 14 ($@1)

    $@1  go to state 9


State 2

    2 decl: INTEGER . IDENTIF resdecl ';' decl
    3     | INTEGER . IDENTIF '=' NUMERO resdecl ';' decl
    4     | INTEGER . IDENTIF '[' NUMERO ']' ';' decl

    IDENTIF  shift, and go to state 10


State 3

    0 $accept: axioma . $end

    $end  shift, and go to state 11


State 4

    1 axioma: decl . mainfun

    MAIN  shift, and go to state 12

    $default  reduce using rule 21 (mainfun)

    mainfun  go to state 13


State 5

    7 decl: fun . def

    IDENTIF  shift, and go to state 14

    $default  reduce using rule 13 (def)

    def  go to state 15
    fun  go to state 16


State 6

    6 decl: vec . '=' NUMERO ';' decl

    '='  shift, and go to state 17


State 7

    5 decl: IDENTIF '=' . NUMERO ';' decl

    NUMERO  shift, and go to state 18


State 8

   78 vec: IDENTIF '[' . expresion ']'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 26
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 9

   15 fun: IDENTIF $@1 . '(' inipar ')' '{' cuerpo '}'

    '('  shift, and go to state 30


State 10

    2 decl: INTEGER IDENTIF . resdecl ';' decl
    3     | INTEGER IDENTIF . '=' NUMERO resdecl ';' decl
    4     | INTEGER IDENTIF . '[' NUMERO ']' ';' decl

    '='  shift, and go to state 31
    '['  shift, and go to state 32
    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 34


State 11

    0 $accept: axioma $end .

    $default  accept


State 12

   20 mainfun: MAIN . '(' ')' '{' cuerpo '}'

    '('  shift, and go to state 35


State 13

    1 axioma: decl mainfun .

    $default  reduce using rule 1 (axioma)


State 14

   15 fun: IDENTIF . $@1 '(' inipar ')' '{' cuerpo '}'

    $default  reduce using rule 14 ($@1)

    $@1  go to state 9


State 15

    7 decl: fun def .

    $default  reduce using rule 7 (decl)


State 16

   12 def: fun . def

    IDENTIF  shift, and go to state 14

    $default  reduce using rule 13 (def)

    def  go to state 36
    fun  go to state 16


State 17

    6 decl: vec '=' . NUMERO ';' decl

    NUMERO  shift, and go to state 37


State 18

    5 decl: IDENTIF '=' NUMERO . ';' decl

    ';'  shift, and go to state 38


State 19

   80 operando: NUMERO .

    $default  reduce using rule 80 (operando)


State 20

   50 callfun: IDENTIF . '(' par ')'
   78 vec: IDENTIF . '[' expresion ']'
   79 operando: IDENTIF .

    '['  shift, and go to state 8
    '('  shift, and go to state 39

    $default  reduce using rule 79 (operando)


State 21

   61 expresion: POW . '(' expresion ',' expresion ')'

    '('  shift, and go to state 40


State 22

   74 termino: '+' . termino

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun   go to state 25
    termino   go to state 41
    vec       go to state 28
    operando  go to state 29


State 23

   75 termino: '-' . termino

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun   go to state 25
    termino   go to state 42
    vec       go to state 28
    operando  go to state 29


State 24

   81 operando: '(' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 43
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 25

   77 termino: callfun .

    $default  reduce using rule 77 (termino)


State 26

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   78 vec: IDENTIF '[' expresion . ']'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 49


State 27

   55 expresion: termino .

    $default  reduce using rule 55 (expresion)


State 28

   76 termino: vec .

    $default  reduce using rule 76 (termino)


State 29

   73 termino: operando .

    $default  reduce using rule 73 (termino)


State 30

   15 fun: IDENTIF $@1 '(' . inipar ')' '{' cuerpo '}'

    INTEGER  shift, and go to state 50

    $default  reduce using rule 17 (inipar)

    inipar  go to state 51


State 31

    3 decl: INTEGER IDENTIF '=' . NUMERO resdecl ';' decl

    NUMERO  shift, and go to state 52


State 32

    4 decl: INTEGER IDENTIF '[' . NUMERO ']' ';' decl

    NUMERO  shift, and go to state 53


State 33

    9 resdecl: ',' . IDENTIF '=' NUMERO resdecl
   10        | ',' . IDENTIF resdecl

    IDENTIF  shift, and go to state 54


State 34

    2 decl: INTEGER IDENTIF resdecl . ';' decl

    ';'  shift, and go to state 55


State 35

   20 mainfun: MAIN '(' . ')' '{' cuerpo '}'

    ')'  shift, and go to state 56


State 36

   12 def: fun def .

    $default  reduce using rule 12 (def)


State 37

    6 decl: vec '=' NUMERO . ';' decl

    ';'  shift, and go to state 57


State 38

    5 decl: IDENTIF '=' NUMERO ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 58
    fun   go to state 5
    vec   go to state 6


State 39

   50 callfun: IDENTIF '(' . par ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    $default  reduce using rule 52 (par)

    callfun    go to state 25
    par        go to state 59
    expresion  go to state 60
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 40

   61 expresion: POW '(' . expresion ',' expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 61
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 41

   74 termino: '+' termino .

    $default  reduce using rule 74 (termino)


State 42

   75 termino: '-' termino .

    $default  reduce using rule 75 (termino)


State 43

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   81 operando: '(' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 62


State 44

   56 expresion: expresion '+' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 63
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 45

   57 expresion: expresion '-' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 64
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 46

   60 expresion: expresion '%' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 65
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 47

   58 expresion: expresion '*' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 66
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 48

   59 expresion: expresion '/' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 67
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 49

   78 vec: IDENTIF '[' expresion ']' .

    $default  reduce using rule 78 (vec)


State 50

   16 inipar: INTEGER . IDENTIF resinipar

    IDENTIF  shift, and go to state 68


State 51

   15 fun: IDENTIF $@1 '(' inipar . ')' '{' cuerpo '}'

    ')'  shift, and go to state 69


State 52

    3 decl: INTEGER IDENTIF '=' NUMERO . resdecl ';' decl

    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 70


State 53

    4 decl: INTEGER IDENTIF '[' NUMERO . ']' ';' decl

    ']'  shift, and go to state 71


State 54

    9 resdecl: ',' IDENTIF . '=' NUMERO resdecl
   10        | ',' IDENTIF . resdecl

    '='  shift, and go to state 72
    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 73


State 55

    2 decl: INTEGER IDENTIF resdecl ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 74
    fun   go to state 5
    vec   go to state 6


State 56

   20 mainfun: MAIN '(' ')' . '{' cuerpo '}'

    '{'  shift, and go to state 75


State 57

    6 decl: vec '=' NUMERO ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 76
    fun   go to state 5
    vec   go to state 6


State 58

    5 decl: IDENTIF '=' NUMERO ';' decl .

    $default  reduce using rule 5 (decl)


State 59

   50 callfun: IDENTIF '(' par . ')'

    ')'  shift, and go to state 77


State 60

   51 par: expresion . respar
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 78

    $default  reduce using rule 54 (respar)

    respar  go to state 79


State 61

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   61          | POW '(' expresion . ',' expresion ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 80


State 62

   81 operando: '(' expresion ')' .

    $default  reduce using rule 81 (operando)


State 63

   56 expresion: expresion . '+' expresion
   56          | expresion '+' expresion .
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 56 (expresion)


State 64

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   57          | expresion '-' expresion .
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 57 (expresion)


State 65

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   60          | expresion '%' expresion .

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 60 (expresion)


State 66

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   58          | expresion '*' expresion .
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    $default  reduce using rule 58 (expresion)


State 67

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   59          | expresion '/' expresion .
   60          | expresion . '%' expresion

    $default  reduce using rule 59 (expresion)


State 68

   16 inipar: INTEGER IDENTIF . resinipar

    ','  shift, and go to state 81

    $default  reduce using rule 19 (resinipar)

    resinipar  go to state 82


State 69

   15 fun: IDENTIF $@1 '(' inipar ')' . '{' cuerpo '}'

    '{'  shift, and go to state 83


State 70

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl . ';' decl

    ';'  shift, and go to state 84


State 71

    4 decl: INTEGER IDENTIF '[' NUMERO ']' . ';' decl

    ';'  shift, and go to state 85


State 72

    9 resdecl: ',' IDENTIF '=' . NUMERO resdecl

    NUMERO  shift, and go to state 86


State 73

   10 resdecl: ',' IDENTIF resdecl .

    $default  reduce using rule 10 (resdecl)


State 74

    2 decl: INTEGER IDENTIF resdecl ';' decl .

    $default  reduce using rule 2 (decl)


State 75

   20 mainfun: MAIN '(' ')' '{' . cuerpo '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 95
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 76

    6 decl: vec '=' NUMERO ';' decl .

    $default  reduce using rule 6 (decl)


State 77

   50 callfun: IDENTIF '(' par ')' .

    $default  reduce using rule 50 (callfun)


State 78

   53 respar: ',' . expresion respar

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 100
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 79

   51 par: expresion respar .

    $default  reduce using rule 51 (par)


State 80

   61 expresion: POW '(' expresion ',' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 101
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 81

   18 resinipar: ',' . INTEGER IDENTIF resinipar

    INTEGER  shift, and go to state 102


State 82

   16 inipar: INTEGER IDENTIF resinipar .

    $default  reduce using rule 16 (inipar)


State 83

   15 fun: IDENTIF $@1 '(' inipar ')' '{' . cuerpo '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 103
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 84

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 104
    fun   go to state 5
    vec   go to state 6


State 85

    4 decl: INTEGER IDENTIF '[' NUMERO ']' ';' . decl

    IDENTIF  shift, and go to state 1
    INTEGER  shift, and go to state 2

    $default  reduce using rule 8 (decl)

    decl  go to state 105
    fun   go to state 5
    vec   go to state 6


State 86

    9 resdecl: ',' IDENTIF '=' NUMERO . resdecl

    ','  shift, and go to state 33

    $default  reduce using rule 11 (resdecl)

    resdecl  go to state 106


State 87

   40 setq: IDENTIF . '=' expresioncond ';'
   50 callfun: IDENTIF . '(' par ')'
   78 vec: IDENTIF . '[' expresion ']'

    '='  shift, and go to state 107
    '['  shift, and go to state 8
    '('  shift, and go to state 39


State 88

   38 setq: INTEGER . IDENTIF ressetq ';'
   39     | INTEGER . IDENTIF '=' expresion ressetq ';'
   41     | INTEGER . IDENTIF '[' expresion ']' ';'

    IDENTIF  shift, and go to state 108


State 89

   37 sent: PUTS . '(' STRING ')' ';'

    '('  shift, and go to state 109


State 90

   24 cuerpo: IF . '(' cond ')' '{' progn els cuerpo

    '('  shift, and go to state 110


State 91

   35 sent: PRINT . '(' STRING ',' impr ')' ';'

    '('  shift, and go to state 111


State 92

   23 cuerpo: WHILE . '(' cond ')' '{' cuerpo '}' cuerpo

    '('  shift, and go to state 112


State 93

   25 cuerpo: FOR . '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    '('  shift, and go to state 113


State 94

   27 cuerpo: RETURN . expresioncond ';' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 116
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 95

   20 mainfun: MAIN '(' ')' '{' cuerpo . '}'

    '}'  shift, and go to state 118


State 96

   22 cuerpo: sent . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 119
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 97

   36 sent: setq .

    $default  reduce using rule 36 (sent)


State 98

   26 cuerpo: callfun . ';' cuerpo

    ';'  shift, and go to state 120


State 99

   42 setq: vec . '=' expresion ';'

    '='  shift, and go to state 121


State 100

   53 respar: ',' expresion . respar
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 78

    $default  reduce using rule 54 (respar)

    respar  go to state 122


State 101

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   61          | POW '(' expresion ',' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 123


State 102

   18 resinipar: ',' INTEGER . IDENTIF resinipar

    IDENTIF  shift, and go to state 124


State 103

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo . '}'

    '}'  shift, and go to state 125


State 104

    3 decl: INTEGER IDENTIF '=' NUMERO resdecl ';' decl .

    $default  reduce using rule 3 (decl)


State 105

    4 decl: INTEGER IDENTIF '[' NUMERO ']' ';' decl .

    $default  reduce using rule 4 (decl)


State 106

    9 resdecl: ',' IDENTIF '=' NUMERO resdecl .

    $default  reduce using rule 9 (resdecl)


State 107

   40 setq: IDENTIF '=' . expresioncond ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 126
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 108

   38 setq: INTEGER IDENTIF . ressetq ';'
   39     | INTEGER IDENTIF . '=' expresion ressetq ';'
   41     | INTEGER IDENTIF . '[' expresion ']' ';'

    '='  shift, and go to state 127
    '['  shift, and go to state 128
    ','  shift, and go to state 129

    $default  reduce using rule 45 (ressetq)

    ressetq  go to state 130


State 109

   37 sent: PUTS '(' . STRING ')' ';'

    STRING  shift, and go to state 131


State 110

   24 cuerpo: IF '(' . cond ')' '{' progn els cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 133
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 111

   35 sent: PRINT '(' . STRING ',' impr ')' ';'

    STRING  shift, and go to state 134


State 112

   23 cuerpo: WHILE '(' . cond ')' '{' cuerpo '}' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 135
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 113

   25 cuerpo: FOR '(' . decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 136
    INTEGER  shift, and go to state 137

    decliter  go to state 138


State 114

   64 expresioncond: '(' . cond ')'
   81 operando: '(' . expresion ')'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 139
    expresioncond  go to state 132
    cond           go to state 140
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 115

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   62 expresioncond: expresion .

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 62 (expresioncond)


State 116

   27 cuerpo: RETURN expresioncond . ';' cuerpo
   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    OR   shift, and go to state 146
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148
    ';'  shift, and go to state 149


State 117

   63 expresioncond: cond .

    $default  reduce using rule 63 (expresioncond)


State 118

   20 mainfun: MAIN '(' ')' '{' cuerpo '}' .

    $default  reduce using rule 20 (mainfun)


State 119

   22 cuerpo: sent cuerpo .

    $default  reduce using rule 22 (cuerpo)


State 120

   26 cuerpo: callfun ';' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 150
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 121

   42 setq: vec '=' . expresion ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 151
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 122

   53 respar: ',' expresion respar .

    $default  reduce using rule 53 (respar)


State 123

   61 expresion: POW '(' expresion ',' expresion ')' .

    $default  reduce using rule 61 (expresion)


State 124

   18 resinipar: ',' INTEGER IDENTIF . resinipar

    ','  shift, and go to state 81

    $default  reduce using rule 19 (resinipar)

    resinipar  go to state 152


State 125

   15 fun: IDENTIF $@1 '(' inipar ')' '{' cuerpo '}' .

    $default  reduce using rule 15 (fun)


State 126

   40 setq: IDENTIF '=' expresioncond . ';'
   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    OR   shift, and go to state 146
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148
    ';'  shift, and go to state 153


State 127

   39 setq: INTEGER IDENTIF '=' . expresion ressetq ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 154
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 128

   41 setq: INTEGER IDENTIF '[' . expresion ']' ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 155
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 129

   43 ressetq: ',' . IDENTIF '=' expresioncond ressetq
   44        | ',' . IDENTIF ressetq

    IDENTIF  shift, and go to state 156


State 130

   38 setq: INTEGER IDENTIF ressetq . ';'

    ';'  shift, and go to state 157


State 131

   37 sent: PUTS '(' STRING . ')' ';'

    ')'  shift, and go to state 158


State 132

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    OR   shift, and go to state 146
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148


State 133

   24 cuerpo: IF '(' cond . ')' '{' progn els cuerpo
   63 expresioncond: cond .

    ')'  shift, and go to state 159

    $default  reduce using rule 63 (expresioncond)


State 134

   35 sent: PRINT '(' STRING . ',' impr ')' ';'

    ','  shift, and go to state 160


State 135

   23 cuerpo: WHILE '(' cond . ')' '{' cuerpo '}' cuerpo
   63 expresioncond: cond .

    ')'  shift, and go to state 161

    $default  reduce using rule 63 (expresioncond)


State 136

   30 decliter: IDENTIF . '=' expresion

    '='  shift, and go to state 162


State 137

   29 decliter: INTEGER . IDENTIF '=' expresion

    IDENTIF  shift, and go to state 163


State 138

   25 cuerpo: FOR '(' decliter . ';' cond ';' iter ')' '{' cuerpo '}' cuerpo

    ';'  shift, and go to state 164


State 139

   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion
   62 expresioncond: expresion .
   81 operando: '(' expresion . ')'

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 62

    $default  reduce using rule 62 (expresioncond)


State 140

   63 expresioncond: cond .
   64              | '(' cond . ')'

    ')'  shift, and go to state 165

    $default  reduce using rule 63 (expresioncond)


State 141

   66 cond: expresioncond LEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 166
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 142

   65 cond: expresioncond GEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 167
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 143

   71 cond: expresioncond EQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 168
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 144

   72 cond: expresioncond NEQ . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 169
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 145

   69 cond: expresioncond AND . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 170
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 146

   70 cond: expresioncond OR . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 171
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 147

   68 cond: expresioncond '<' . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 172
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 148

   67 cond: expresioncond '>' . expresioncond

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 173
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 149

   27 cuerpo: RETURN expresioncond ';' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 174
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 150

   26 cuerpo: callfun ';' cuerpo .

    $default  reduce using rule 26 (cuerpo)


State 151

   42 setq: vec '=' expresion . ';'
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ';'  shift, and go to state 175


State 152

   18 resinipar: ',' INTEGER IDENTIF resinipar .

    $default  reduce using rule 18 (resinipar)


State 153

   40 setq: IDENTIF '=' expresioncond ';' .

    $default  reduce using rule 40 (setq)


State 154

   39 setq: INTEGER IDENTIF '=' expresion . ressetq ';'
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ','  shift, and go to state 129

    $default  reduce using rule 45 (ressetq)

    ressetq  go to state 176


State 155

   41 setq: INTEGER IDENTIF '[' expresion . ']' ';'
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 177


State 156

   43 ressetq: ',' IDENTIF . '=' expresioncond ressetq
   44        | ',' IDENTIF . ressetq

    '='  shift, and go to state 178
    ','  shift, and go to state 129

    $default  reduce using rule 45 (ressetq)

    ressetq  go to state 179


State 157

   38 setq: INTEGER IDENTIF ressetq ';' .

    $default  reduce using rule 38 (setq)


State 158

   37 sent: PUTS '(' STRING ')' . ';'

    ';'  shift, and go to state 180


State 159

   24 cuerpo: IF '(' cond ')' . '{' progn els cuerpo

    '{'  shift, and go to state 181


State 160

   35 sent: PRINT '(' STRING ',' . impr ')' ';'

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 182
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 183
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 184
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 161

   23 cuerpo: WHILE '(' cond ')' . '{' cuerpo '}' cuerpo

    '{'  shift, and go to state 185


State 162

   30 decliter: IDENTIF '=' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 186
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 163

   29 decliter: INTEGER IDENTIF . '=' expresion

    '='  shift, and go to state 187


State 164

   25 cuerpo: FOR '(' decliter ';' . cond ';' iter ')' '{' cuerpo '}' cuerpo

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 132
    cond           go to state 188
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 165

   64 expresioncond: '(' cond ')' .

    $default  reduce using rule 64 (expresioncond)


State 166

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   66     | expresioncond LEQ expresioncond .
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    $default  reduce using rule 66 (cond)


State 167

   65 cond: expresioncond . GEQ expresioncond
   65     | expresioncond GEQ expresioncond .
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    $default  reduce using rule 65 (cond)


State 168

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   71     | expresioncond EQ expresioncond .
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148

    $default  reduce using rule 71 (cond)


State 169

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond
   72     | expresioncond NEQ expresioncond .

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148

    $default  reduce using rule 72 (cond)


State 170

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   69     | expresioncond AND expresioncond .
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148

    $default  reduce using rule 69 (cond)


State 171

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   70     | expresioncond OR expresioncond .
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148

    $default  reduce using rule 70 (cond)


State 172

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   68     | expresioncond '<' expresioncond .
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    $default  reduce using rule 68 (cond)


State 173

   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   67     | expresioncond '>' expresioncond .
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    $default  reduce using rule 67 (cond)


State 174

   27 cuerpo: RETURN expresioncond ';' cuerpo .

    $default  reduce using rule 27 (cuerpo)


State 175

   42 setq: vec '=' expresion ';' .

    $default  reduce using rule 42 (setq)


State 176

   39 setq: INTEGER IDENTIF '=' expresion ressetq . ';'

    ';'  shift, and go to state 189


State 177

   41 setq: INTEGER IDENTIF '[' expresion ']' . ';'

    ';'  shift, and go to state 190


State 178

   43 ressetq: ',' IDENTIF '=' . expresioncond ressetq

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 191
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 179

   44 ressetq: ',' IDENTIF ressetq .

    $default  reduce using rule 44 (ressetq)


State 180

   37 sent: PUTS '(' STRING ')' ';' .

    $default  reduce using rule 37 (sent)


State 181

   24 cuerpo: IF '(' cond ')' '{' . progn els cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 192
    progn    go to state 193
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 182

   47 impr: STRING .
   49     | STRING . ',' impr

    ','  shift, and go to state 194

    $default  reduce using rule 47 (impr)


State 183

   35 sent: PRINT '(' STRING ',' impr . ')' ';'

    ')'  shift, and go to state 195


State 184

   46 impr: expresioncond .
   48     | expresioncond . ',' impr
   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    OR   shift, and go to state 146
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148
    ','  shift, and go to state 196

    $default  reduce using rule 46 (impr)


State 185

   23 cuerpo: WHILE '(' cond ')' '{' . cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 197
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 186

   30 decliter: IDENTIF '=' expresion .
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 30 (decliter)


State 187

   29 decliter: INTEGER IDENTIF '=' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 198
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 188

   25 cuerpo: FOR '(' decliter ';' cond . ';' iter ')' '{' cuerpo '}' cuerpo
   63 expresioncond: cond .

    ';'  shift, and go to state 199

    $default  reduce using rule 63 (expresioncond)


State 189

   39 setq: INTEGER IDENTIF '=' expresion ressetq ';' .

    $default  reduce using rule 39 (setq)


State 190

   41 setq: INTEGER IDENTIF '[' expresion ']' ';' .

    $default  reduce using rule 41 (setq)


State 191

   43 ressetq: ',' IDENTIF '=' expresioncond . ressetq
   65 cond: expresioncond . GEQ expresioncond
   66     | expresioncond . LEQ expresioncond
   67     | expresioncond . '>' expresioncond
   68     | expresioncond . '<' expresioncond
   69     | expresioncond . AND expresioncond
   70     | expresioncond . OR expresioncond
   71     | expresioncond . EQ expresioncond
   72     | expresioncond . NEQ expresioncond

    LEQ  shift, and go to state 141
    GEQ  shift, and go to state 142
    EQ   shift, and go to state 143
    NEQ  shift, and go to state 144
    AND  shift, and go to state 145
    OR   shift, and go to state 146
    '<'  shift, and go to state 147
    '>'  shift, and go to state 148
    ','  shift, and go to state 129

    $default  reduce using rule 45 (ressetq)

    ressetq  go to state 200


State 192

   32 progn: cuerpo .

    $default  reduce using rule 32 (progn)


State 193

   24 cuerpo: IF '(' cond ')' '{' progn . els cuerpo

    '}'  shift, and go to state 201

    els  go to state 202


State 194

   49 impr: STRING ',' . impr

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 182
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 203
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 184
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 195

   35 sent: PRINT '(' STRING ',' impr ')' . ';'

    ';'  shift, and go to state 204


State 196

   48 impr: expresioncond ',' . impr

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    STRING   shift, and go to state 182
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 114

    impr           go to state 205
    callfun        go to state 25
    expresion      go to state 115
    expresioncond  go to state 184
    cond           go to state 117
    termino        go to state 27
    vec            go to state 28
    operando       go to state 29


State 197

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo . '}' cuerpo

    '}'  shift, and go to state 206


State 198

   29 decliter: INTEGER IDENTIF '=' expresion .
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 29 (decliter)


State 199

   25 cuerpo: FOR '(' decliter ';' cond ';' . iter ')' '{' cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 207

    iter  go to state 208


State 200

   43 ressetq: ',' IDENTIF '=' expresioncond ressetq .

    $default  reduce using rule 43 (ressetq)


State 201

   33 els: '}' . ELSE '{' progn '}'
   34    | '}' .

    ELSE  shift, and go to state 209

    $default  reduce using rule 34 (els)


State 202

   24 cuerpo: IF '(' cond ')' '{' progn els . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 210
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 203

   49 impr: STRING ',' impr .

    $default  reduce using rule 49 (impr)


State 204

   35 sent: PRINT '(' STRING ',' impr ')' ';' .

    $default  reduce using rule 35 (sent)


State 205

   48 impr: expresioncond ',' impr .

    $default  reduce using rule 48 (impr)


State 206

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo '}' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 211
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 207

   31 iter: IDENTIF . '=' expresion

    '='  shift, and go to state 212


State 208

   25 cuerpo: FOR '(' decliter ';' cond ';' iter . ')' '{' cuerpo '}' cuerpo

    ')'  shift, and go to state 213


State 209

   33 els: '}' ELSE . '{' progn '}'

    '{'  shift, and go to state 214


State 210

   24 cuerpo: IF '(' cond ')' '{' progn els cuerpo .

    $default  reduce using rule 24 (cuerpo)


State 211

   23 cuerpo: WHILE '(' cond ')' '{' cuerpo '}' cuerpo .

    $default  reduce using rule 23 (cuerpo)


State 212

   31 iter: IDENTIF '=' . expresion

    NUMERO   shift, and go to state 19
    IDENTIF  shift, and go to state 20
    POW      shift, and go to state 21
    '+'      shift, and go to state 22
    '-'      shift, and go to state 23
    '('      shift, and go to state 24

    callfun    go to state 25
    expresion  go to state 215
    termino    go to state 27
    vec        go to state 28
    operando   go to state 29


State 213

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' . '{' cuerpo '}' cuerpo

    '{'  shift, and go to state 216


State 214

   33 els: '}' ELSE '{' . progn '}'

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 192
    progn    go to state 217
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 215

   31 iter: IDENTIF '=' expresion .
   56 expresion: expresion . '+' expresion
   57          | expresion . '-' expresion
   58          | expresion . '*' expresion
   59          | expresion . '/' expresion
   60          | expresion . '%' expresion

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 31 (iter)


State 216

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' . cuerpo '}' cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 218
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 217

   33 els: '}' ELSE '{' progn . '}'

    '}'  shift, and go to state 219


State 218

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo . '}' cuerpo

    '}'  shift, and go to state 220


State 219

   33 els: '}' ELSE '{' progn '}' .

    $default  reduce using rule 33 (els)


State 220

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' . cuerpo

    IDENTIF  shift, and go to state 87
    INTEGER  shift, and go to state 88
    PUTS     shift, and go to state 89
    IF       shift, and go to state 90
    PRINT    shift, and go to state 91
    WHILE    shift, and go to state 92
    FOR      shift, and go to state 93
    RETURN   shift, and go to state 94

    $default  reduce using rule 28 (cuerpo)

    cuerpo   go to state 221
    sent     go to state 96
    setq     go to state 97
    callfun  go to state 98
    vec      go to state 99


State 221

   25 cuerpo: FOR '(' decliter ';' cond ';' iter ')' '{' cuerpo '}' cuerpo .

    $default  reduce using rule 25 (cuerpo)
