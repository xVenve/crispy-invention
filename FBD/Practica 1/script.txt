DROP TABLE USUARIOS CASCADE CONSTRAINTS;
DROP TABLE PERFILES CASCADE CONSTRAINTS;
DROP TABLE TIPOS_CONTRATOS CASCADE CONSTRAINTS;
DROP TABLE CONTRATOS CASCADE CONSTRAINTS;
DROP TABLE RATIOS CASCADE CONSTRAINTS;
DROP TABLE IDIOMAS CASCADE CONSTRAINTS;
DROP TABLE CALIFICACIONES CASCADE CONSTRAINTS;
DROP TABLE GENEROS CASCADE CONSTRAINTS;
DROP TABLE IMDBS CASCADE CONSTRAINTS;
DROP TABLE PELICULAS CASCADE CONSTRAINTS;
DROP TABLE PALABRAS_PELICULA CASCADE CONSTRAINTS;
DROP TABLE GENEROS_PELICULA CASCADE CONSTRAINTS;
DROP TABLE PROTAGONISTAS CASCADE CONSTRAINTS;
DROP TABLE CLUBES CASCADE CONSTRAINTS;
DROP TABLE MEMBRESIA CASCADE CONSTRAINTS;
DROP TABLE PROPUESTAS CASCADE CONSTRAINTS;
DROP TABLE CLUBES_HISTORICOS CASCADE CONSTRAINTS;
DROP TABLE MEMBRESIA_HISTORICAS CASCADE CONSTRAINTS;
DROP TABLE OPINIONES CASCADE CONSTRAINTS;
DROP TABLE INVITACIONES CASCADE CONSTRAINTS;
DROP TABLE SOLICITUDES CASCADE CONSTRAINTS;
DROP TABLE CREACIONES_CLUB CASCADE CONSTRAINTS;


2-revisar los .
4-actualizar el documento
5-between de las fechas
6-Comprobar Delete on cascade

CREATE TABLE USUARIOS(
	nombre_usuario VARCHAR2(100) NOT NULL,
	password VARCHAR2(100) NOT NULL,
	email VARCHAR2(100) NOT NULL,
	CONSTRAINT PKUSUARIOS_nombre_usuario PRIMARY KEY (nombre_usuario),
	CONSTRAINT FKUSUARIOS_email UNIQUE(email),
	CONSTRAINT password_valid CHECK (password>8)
	);

CREATE TABLE PERFILES(
	dni VARCHAR2(9) NOT NULL,
	nombre_pila VARCHAR2(100),
	apellido1 VARCHAR2(100),
	apellido2 VARCHAR(100),
	f_nacimiento DATE,
	telf VARCHAR2(14),
	edad NUMBER(3),
	usuario VARCHAR2(100) NOT NULL,
	CONSTRAINT PKPERFILES_dni PRIMARY KEY (dni),
	CONSTRAINT  FKPERFILES_perfil_usuario FOREIGN KEY(usuario) REFERENCES USUARIOS(nombre_usuario)
	ON DELETE CASCADE
);

CREATE TABLE TIPOS_CONTRATOS(
	tipo VARCHAR2(100) NOT NULL,
	CONSTRAINT PKTIPOSCONTRATOS_tipo PRIMARY KEY (tipo)
);

CREATE TABLE CONTRATOS(
	id VARCHAR2(100) NOT NULL,
	tipo_contrato VARCHAR2(50) NOT NULL,
	perfil VARCHAR2(9) NOT NULL,
	cod_postal VARCHAR2(10) NOT NULL,
	ciudad VARCHAR2(100) NOT NULL,
	pais VARCHAR2(100) NOT NULL,
	f_inicio DATE NOT NULL,
	f_fin DATE,
	CONSTRAINT PKCONTRATOS_id PRIMARY KEY (id),
	CONSTRAINT FKCONTRATO_contrato_perfil FOREIGN KEY (perfil) REFERENCES PERFILES(DNI),
	CONSTRAINT FKCONTRATO_contrato_tipo FOREIGN KEY (tipo_contrato) REFERENCES TIPOS_CONTRATOS(tipo)
);

CREATE TABLE RATIOS(
	tipo DECIMAL(5) NOT NULL,
	CONSTRAINT PKRATIOS_tipo PRIMARY KEY (tipo)
);

CREATE TABLE IDIOMAS(
	nombre VARCHAR2(100) NOT NULL,
	CONSTRAINT PKIDIOMAS_nombre PRIMARY KEY (nombre)
);

CREATE TABLE CALIFICACIONES(
	tipo VARCHAR2(8) NOT NULL,
	CONSTRAINT PKCALIFICACIONES_tipo PRIMARY KEY (tipo)
);

CREATE TABLE GENEROS(
	tipo VARCHAR2(100) NOT NULL,
	CONSTRAINT PKGENEROS_tipo PRIMARY KEY (tipo)
);

CREATE TABLE IMDBS(
	link VARCHAR2(200) NOT NULL,
	puntuacion NUMBER(2) NOT NULL,
	cantidad_users NUMBER(25) NOT NULL,
	cantidad_criticos NUMBER(20) NOT NULL,
	CONSTRAINT PKIMDBS_link PRIMARY KEY (link)
);

CREATE TABLE PELICULAS(
	titulo VARCHAR2(100) NOT NULL,
	director VARCHAR2(100) NOT NULL,
	duracion NUMBER(3) NOT NULL,
	color VARCHAR2(100) NOT NULL,
	ratio DECIMAL(5) NOT NULL,
	a√±o_estreno DATE NOT NULL,
	calif_edad VARCHAR2(8) NOT NULL,
	pais VARCHAR2(100) NOT NULL,
	idioma VARCHAR2(100) NOT NULL,
	presupuesto NUMBER(30) NOT NULL,
	ingresos NUMBER(30) NOT NULL,
	imdb VARCHAR2(100) NOT NULL,
	n_rostros NUMBER(8) NOT NULL,
	l_dir NUMBER(25) NOT NULL,
	l_peli NUMBER(25) NOT NULL,
	servicio VARCHAR2(100) NOT NULL,
	CONSTRAINT PKPELICULAS PRIMARY KEY(titulo, director),
	CONSTRAINT CHECKPELICULAS_COLOR CHECK (color IN('Color','Black and White')),
	CONSTRAINT FKPELICULAS_RATIO FOREIGN KEY(ratio) REFERENCES RATIOS(tipo),
	CONSTRAINT FKPELICULAS_CALIFICACION FOREIGN KEY(calif_edad) REFERENCES CALIFICACIONES(TIPO),
	CONSTRAINT FKPELICULAS_IDIOMA FOREIGN KEY(idioma) REFERENCES IDIOMAS(NOMBRE),
	CONSTRAINT FKPELICULAS_IMDB FOREIGN KEY(imdb) REFERENCES IMDBS(link),
	CONSTRAINT FKPELICULAS_SERVICIO FOREIGN KEY(servicio) REFERENCES TIPOS_CONTRATOS(tipo)
);

CREATE TABLE PALABRAS_PELICULA(
	pelicula_titulo VARCHAR2(100) NOT NULL,
	pelicula_director VARCHAR2(100) NOT NULL,
	palabra VARCHAR2(100) NOT NULL,
	CONSTRAINT PKPALABRASPELICULA PRIMARY KEY(pelicula_titulo, pelicula_director),
	CONSTRAINT FKPALABRASPELICULA_pelicula FOREIGN KEY (pelicula_titulo, pelicula_director) REFERENCES PELICULAS(titulo, director)
	 ON DELETE CASCADE
);

CREATE TABLE GENEROS_PELICULA(
	pelicula_titulo VARCHAR2(100) NOT NULL,
	pelicula_director VARCHAR(100) NOT NULL,
	genero VARCHAR2(100) NOT NULL,
	CONSTRAINT PKGENEROSPELICULA PRIMARY KEY(pelicula_titulo, pelicula_director),
	CONSTRAINT FKGENEROSPELICULA_pelicula FOREIGN KEY (pelicula_titulo, pelicula_director) REFERENCES PELICULAS(titulo, director)
	 ON DELETE CASCADE,
	CONSTRAINT FKGENEROSPELICULA_genero FOREIGN KEY (genero) REFERENCES GENEROS(tipo)
);

CREATE TABLE PROTAGONISTAS(
	pelicula_titulo VARCHAR2(100) NOT NULL,
	pelicula_director VARCHAR2(100) NOT NULL,
	nombre VARCHAR2(50) NOT NULL,
	apellido VARCHAR2(50) NOT NULL,
	likes NUMBER (25) NOT NULL,
	CONSTRAINT PKPROTAGONISTAS PRIMARY KEY(pelicula_titulo, pelicula_director, nombre, apellido),
	CONSTRAINT FKPROTAGONISTAS_pelicula FOREIGN KEY (pelicula_titulo, pelicula_director) REFERENCES PELICULAS(titulo, director)
);

CREATE TABLE CLUBES(
	nombre VARCHAR2(100) NOT NULL,
	abierto NUMBER(1) NOT NULL,
	ciudad VARCHAR2(50) NOT NULL,
	cod_postal VARCHAR2(60) NOT NULL,
	pais VARCHAR2(50) NOT NULL,
	f_creacion DATE NOT NULL,
	CONSTRAINT PKCLUBES_nombre PRIMARY KEY(nombre)
);

CREATE TABLE MEMBRESIA(
	club VARCHAR2(100) NOT NULL,
	usuario VARCHAR2(100) NOT NULL,
	media_actividad NUMBER(10) NOT NULL,
	CONSTRAINT PKMEMBRESIA PRIMARY KEY(club, usuario),
	CONSTRAINT FKMEMBRESIA_club FOREIGN KEY(club) REFERENCES CLUBES(nombre),
	CONSTRAINT FKMEMBRESIA_usuario FOREIGN KEY(usuario) REFERENCES USUARIOS(nombre_usuario)
);

CREATE TABLE PROPUESTAS(
	miembro_club VARCHAR(100) NOT NULL,
	miembro_usuario VARCHAR(100) NOT NULL,
	pelicula_titulo VARCHAR(100) NOT NULL,
	pelicula_director VARCHAR(100) NOT NULL,
	f_completa DATE NOT NULL,
	aceptado NUMBER(1) NOT NULL,
	asunto VARCHAR(100) NOT NULL,
	mensaje VARCHAR (1500) NOT NULL,
	CONSTRAINT PKPROPUESTAS PRIMARY KEY(miembro_club, miembro_usuario, f_completa),
	CONSTRAINT FKPROPUESTAS_miembro FOREIGN KEY(miembro_club, miembro_usuario) REFERENCES MEMBRESIA(club, usuario)
	 ON DELETE CASCADE,
	CONSTRAINT FKPROPUESTAS_peliculas FOREIGN KEY(pelicula_titulo, pelicula_director) REFERENCES PELICULAS(titulo, director)
);

CREATE TABLE CLUBES_HISTORICOS(
	nombre VARCHAR2(100) NOT NULL,
	abierto NUMBER(1) NOT NULL,
	ciudad VARCHAR2(50) NOT NULL,
	cod_postal VARCHAR2(60) NOT NULL,
	pais VARCHAR2(50) NOT NULL,
	f_creacion DATE,
	f_cierre DATE,
	CONSTRAINT PKCLUBES_HISTORICOS_nombre PRIMARY KEY(nombre)
);

CREATE TABLE MEMBRESIA_HISTORICAS (
	club VARCHAR2(100) NOT NULL,
	usuario VARCHAR2(100) NOT NULL,
	media_actividad NUMBER(10) NOT NULL,
	CONSTRAINT PKMEMBRESIA_HISTORICAS PRIMARY KEY(club, usuario),
	CONSTRAINT FKMEMBRESIA_HISTRORICAS_club FOREIGN KEY(club) REFERENCES CLUBES_HISTORICOS(nombre)
	 ON DELETE CASCADE,
	CONSTRAINT FKMEMBRESIA_HISTRORICAS_usuario FOREIGN KEY(usuario) REFERENCES USUARIOS(nombre_usuario)
	 ON DELETE CASCADE
);

CREATE TABLE OPINIONES(
	miembro_club VARCHAR2(100) NOT NULL,
	miembro_usuario VARCHAR2(100) NOT NULL,
	pelicula_titulo VARCHAR2(100) NOT NULL,
	pelicula_director VARCHAR2(100) NOT NULL,
	f_completa DATE NOT NULL,
	asunto VARCHAR2(1500) NOT NULL,
	valoracion NUMBER(2),
	CONSTRAINT PKOPINIONES_miembro_club PRIMARY KEY (miembro_club, miembro_usuario, pelicula_titulo, pelicula_director),
	CONSTRAINT FKOPINIONES_pelicula FOREIGN KEY (pelicula_titulo, pelicula_director) REFERENCES PELICULAS(titulo, director)
	ON DELETE CASCADE,
	CONSTRAINT FKOPINIONES_miembro FOREIGN KEY (miembro_usuario, miembro_club) REFERENCES MEMBRESIA (usuario, club)
	ON DELETE CASCADE
);

CREATE TABLE INVITACIONES(
	miembro_usuario VARCHAR2(100) NOT NULL,
	miembro_club VARCHAR2(100) NOT NULL,
	invitado VARCHAR(100) NOT NULL,
	f_completa DATE NOT NULL,
	aceptado NUMBER(1),
	CONSTRAINT PKINVITACIONES PRIMARY KEY (miembro_club, miembro_usuario, invitado),
	CONSTRAINT FKINVITACIONES_miembro FOREIGN KEY (miembro_usuario, miembro_club) REFERENCES MEMBRESIA (usuario, club)
	ON DELETE CASCADE,
	CONSTRAINT FKINVITACIONES_invitado FOREIGN KEY (invitado) REFERENCES USUARIOS (nombre_usuario)
	ON DELETE CASCADE
);

CREATE TABLE SOLICITUDES(
	usuario VARCHAR2(100) NOT NULL,
	club varchar2(100) NOT NULL,
	f_completa DATE NOT NULL,
	aceptado NUMBER(1),
	CONSTRAINT PKSOLICITUDES_usuario PRIMARY KEY(usuario, club),
	CONSTRAINT FKSOLICITUDES_usuario FOREIGN KEY(usuario) REFERENCES USUARIOS(nombre_usuario)
	 ON DELETE CASCADE,
	CONSTRAINT FKSOLICITUDES_club FOREIGN KEY(club) REFERENCES CLUBES(nombre)
	 ON DELETE CASCADE
);

CREATE TABLE CREACIONES_CLUB (
	usuario VARCHAR2(100) NOT NULL,
	club VARCHAR2(100) NOT NULL,
	f_completa DATE NOT NULL,
	CONSTRAINT PKCREACIONESCLUB PRIMARY KEY (usuario, club),
	CONSTRAINT FKCREACIONESCLUB_usuario FOREIGN KEY (usuario) REFERENCES USUARIOS(nombre_usuario)
	ON DELETE CASCADE,
	CONSTRAINT FKCREACIONESCLUB_club FOREIGN KEY (club) REFERENCES CLUBES(nombre)
	ON DELETE CASCADE
);
